{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lold2\\\\demo\\\\src\\\\front\\\\src\\\\page\\\\SearchResultsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './SearchResultsPage.css'; // CSS 파일 import\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResultsPage = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState(null);\n  const [visibleSongs, setVisibleSongs] = useState([]);\n  const [songPage, setSongPage] = useState(1);\n  const [hasMoreSongs, setHasMoreSongs] = useState(true);\n  const location = useLocation();\n  const query = new URLSearchParams(location.search).get('query'); // 쿼리에서 검색어 추출\n\n  useEffect(() => {\n    if (query) {\n      axios.get('http://localhost:8080/api/v1/vtubers/search', {\n        params: {\n          query\n        }\n      }).then(response => {\n        console.log('Search results:', response.data);\n        if (response.data) {\n          var _response$data$songs;\n          setSearchResults(response.data);\n          setVisibleSongs(((_response$data$songs = response.data.songs) === null || _response$data$songs === void 0 ? void 0 : _response$data$songs.slice(0, 10)) || []); // 상위 10개만 노출, undefined 처리\n        }\n      }).catch(error => {\n        console.error('검색 중 오류 발생:', error);\n      });\n    }\n  }, [query]);\n  const loadMoreSongs = () => {\n    var _searchResults$songs;\n    const nextPage = songPage + 1;\n    const newSongs = (searchResults === null || searchResults === void 0 ? void 0 : (_searchResults$songs = searchResults.songs) === null || _searchResults$songs === void 0 ? void 0 : _searchResults$songs.slice(visibleSongs.length, visibleSongs.length + 10)) || [];\n\n    // 기존의 노래 목록과 새로운 노래 목록을 결합하여 업데이트\n    setVisibleSongs([...visibleSongs, ...newSongs]);\n    setSongPage(nextPage);\n\n    // 더보기 버튼을 숨길 조건 체크\n    if (newSongs.length === 0 || newSongs.length < 10) {\n      setHasMoreSongs(false); // 더 이상 노래가 없으면 더보기 버튼 숨김\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), (searchResults === null || searchResults === void 0 ? void 0 : searchResults.vtubers) && searchResults.vtubers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBC84\\uD29C\\uBC84 \\uCC44\\uB110\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vtuber-grid\",\n        children: searchResults.vtubers.map(vtuber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vtuber-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://yt3.ggpht.com/ytc/${vtuber.channelId}/s176-c-k-no-mo-rj-c0xffffff/photo.jpg`,\n            alt: vtuber.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: vtuber.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uAD6C\\uB3C5\\uC790 \\uC218: \", vtuber.subscriberCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => window.open(`https://www.youtube.com/channel/${vtuber.channelId}`, '_blank'),\n              children: \"\\uCC44\\uB110\\uB85C \\uC774\\uB3D9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)]\n        }, vtuber.channelId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB178\\uB798 \\uACB0\\uACFC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-grid\",\n        children: visibleSongs.map(song => /*#__PURE__*/_jsxDEV(VideoCard, {\n          song: song\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), hasMoreSongs && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadMoreSongs,\n        children: \"\\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n// 각 노래 정보를 표시하는 VideoCard 컴포넌트\n_s(SearchResultsPage, \"9tdRrma03U5xRrfkTeSWFec2eaA=\", false, function () {\n  return [useLocation];\n});\n_c = SearchResultsPage;\nconst VideoCard = ({\n  song\n}) => {\n  const thumbnailUrl = `https://img.youtube.com/vi/${song.videoId}/0.jpg`; // YouTube 썸네일 URL 형식\n\n  const handleCardClick = () => {\n    window.open(`https://www.youtube.com/watch?v=${song.videoId}`, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-card\",\n    onClick: handleCardClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnailUrl,\n      alt: song.title,\n      className: \"thumbnail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCC44\\uB110\\uBA85: \", song.vtuberName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uAC8C\\uC2DC\\uC77C: \", new Date(song.publishedAt).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC870\\uD68C\\uC218: \", song.viewCount.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_c2 = VideoCard;\nexport default SearchResultsPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchResultsPage\");\n$RefreshReg$(_c2, \"VideoCard\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","jsxDEV","_jsxDEV","SearchResultsPage","_s","searchResults","setSearchResults","visibleSongs","setVisibleSongs","songPage","setSongPage","hasMoreSongs","setHasMoreSongs","location","query","URLSearchParams","search","get","params","then","response","console","log","data","_response$data$songs","songs","slice","catch","error","loadMoreSongs","_searchResults$songs","nextPage","newSongs","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","vtubers","map","vtuber","src","channelId","alt","name","subscriberCount","onClick","window","open","song","VideoCard","id","_c","thumbnailUrl","videoId","handleCardClick","title","vtuberName","Date","publishedAt","toLocaleDateString","viewCount","toLocaleString","_c2","$RefreshReg$"],"sources":["C:/Users/lold2/demo/src/front/src/page/SearchResultsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './SearchResultsPage.css'; // CSS 파일 import\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst SearchResultsPage: React.FC = () => {\r\n    const [searchResults, setSearchResults] = useState<{ songs: any[], vtubers: any[] } | null>(null);\r\n    const [visibleSongs, setVisibleSongs] = useState<any[]>([]);\r\n    const [songPage, setSongPage] = useState(1);\r\n    const [hasMoreSongs, setHasMoreSongs] = useState(true);\r\n\r\n    const location = useLocation();\r\n    const query = new URLSearchParams(location.search).get('query'); // 쿼리에서 검색어 추출\r\n\r\n    useEffect(() => {\r\n        if (query) {\r\n            axios.get('http://localhost:8080/api/v1/vtubers/search', {\r\n                params: { query }\r\n            })\r\n                .then((response) => {\r\n                    console.log('Search results:', response.data);\r\n                    if (response.data) {\r\n                        setSearchResults(response.data);\r\n                        setVisibleSongs(response.data.songs?.slice(0, 10) || []); // 상위 10개만 노출, undefined 처리\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error('검색 중 오류 발생:', error);\r\n                });\r\n        }\r\n    }, [query]);\r\n\r\n    const loadMoreSongs = () => {\r\n        const nextPage = songPage + 1;\r\n        const newSongs = searchResults?.songs?.slice(visibleSongs.length, visibleSongs.length + 10) || [];\r\n\r\n        // 기존의 노래 목록과 새로운 노래 목록을 결합하여 업데이트\r\n        setVisibleSongs([...visibleSongs, ...newSongs]);\r\n\r\n        setSongPage(nextPage);\r\n\r\n        // 더보기 버튼을 숨길 조건 체크\r\n        if (newSongs.length === 0 || newSongs.length < 10) {\r\n            setHasMoreSongs(false); // 더 이상 노래가 없으면 더보기 버튼 숨김\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-results-page\">\r\n            <h1>검색 결과</h1>\r\n\r\n            {/* 버튜버 채널 결과 */}\r\n            {searchResults?.vtubers && searchResults.vtubers.length > 0 && (\r\n                <div>\r\n                    <h2>버튜버 채널</h2>\r\n                    <div className=\"vtuber-grid\">\r\n                        {searchResults.vtubers.map((vtuber: any) => (\r\n                            <div className=\"vtuber-card\" key={vtuber.channelId}>\r\n                                <img src={`https://yt3.ggpht.com/ytc/${vtuber.channelId}/s176-c-k-no-mo-rj-c0xffffff/photo.jpg`} alt={vtuber.name} />\r\n                                <div>\r\n                                    <h3>{vtuber.name}</h3>\r\n                                    <p>구독자 수: {vtuber.subscriberCount}</p>\r\n                                    <button onClick={() => window.open(`https://www.youtube.com/channel/${vtuber.channelId}`, '_blank')}>\r\n                                        채널로 이동\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* 노래 결과 */}\r\n            <div>\r\n                <h2>노래 결과</h2>\r\n                <div className=\"video-grid\">\r\n                    {visibleSongs.map((song: any) => (\r\n                        <VideoCard key={song.id} song={song} />\r\n                    ))}\r\n                </div>\r\n\r\n                {/* 더보기 버튼 */}\r\n                {hasMoreSongs && (\r\n                    <button onClick={loadMoreSongs}>더보기</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// 각 노래 정보를 표시하는 VideoCard 컴포넌트\r\nconst VideoCard: React.FC<{ song: any }> = ({ song }) => {\r\n    const thumbnailUrl = `https://img.youtube.com/vi/${song.videoId}/0.jpg`; // YouTube 썸네일 URL 형식\r\n\r\n    const handleCardClick = () => {\r\n        window.open(`https://www.youtube.com/watch?v=${song.videoId}`, '_blank');\r\n    };\r\n\r\n    return (\r\n        <div className=\"video-card\" onClick={handleCardClick}>\r\n            <img src={thumbnailUrl} alt={song.title} className=\"thumbnail\" />\r\n            <div className=\"video-info\">\r\n                <h3>{song.title}</h3>\r\n                <p>채널명: {song.vtuberName}</p>\r\n                <p>게시일: {new Date(song.publishedAt).toLocaleDateString()}</p>\r\n                <p>조회수: {song.viewCount.toLocaleString()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchResultsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}