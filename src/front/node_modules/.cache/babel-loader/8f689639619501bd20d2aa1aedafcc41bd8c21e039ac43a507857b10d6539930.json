{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lold2\\\\demo\\\\src\\\\front\\\\src\\\\page\\\\SearchResultsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './SearchResultsPage.css'; // SearchResultsPage 전용 CSS 파일\nimport { useLocation, useNavigate } from 'react-router-dom'; // useNavigate 사용\nimport VideoCard from './components/VideoCard'; // VideoCard 컴포넌트 가져오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResultsPage = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState(null);\n  const [visibleSongs, setVisibleSongs] = useState([]);\n  const [songPage, setSongPage] = useState(1);\n  const [hasMoreSongs, setHasMoreSongs] = useState(true);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const query = new URLSearchParams(location.search).get('query');\n  const channelId = new URLSearchParams(location.search).get('channelId'); // channelId 가져옴\n\n  useEffect(() => {\n    // channelId 또는 query가 있을 때 API 호출\n    if (query || channelId) {\n      axios.get('http://localhost:8080/api/v1/vtubers/search', {\n        params: {\n          query,\n          channelId\n        } // query 또는 channelId 전달\n      }).then(response => {\n        console.log('Search results:', response.data); // 결과 로그 확인\n        if (response.data) {\n          setSearchResults(response.data);\n          setVisibleSongs(response.data.songs.slice(0, 10)); // 처음 10개 노출\n        }\n      }).catch(error => {\n        console.error('검색 중 오류 발생:', error);\n      });\n    }\n  }, [query, channelId]); // query와 channelId가 변경될 때마다 호출\n\n  const loadMoreSongs = () => {\n    if (!searchResults) return; // searchResults가 null인 경우 처리\n\n    const nextPage = songPage + 1;\n    const newSongs = searchResults.songs.slice(visibleSongs.length, visibleSongs.length + 10);\n    setVisibleSongs([...visibleSongs, ...newSongs]); // 10개씩 추가로 보이기\n    setSongPage(nextPage);\n    if (newSongs.length < 10) {\n      setHasMoreSongs(false); // 더 이상 노래가 없으면 더보기 버튼 숨김\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), (searchResults === null || searchResults === void 0 ? void 0 : searchResults.vtubers) && searchResults.vtubers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBC84\\uD29C\\uBC84 \\uCC44\\uB110\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vtuber-grid\",\n        children: searchResults.vtubers.map(vtuber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vtuber-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: vtuber.channelImg,\n            alt: vtuber.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vtuber-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: vtuber.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uAD6C\\uB3C5\\uC790 \\uC218: \", vtuber.subscribers]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => window.open(`https://www.youtube.com/channel/${vtuber.channelId}`, '_blank'),\n              children: \"\\uCC44\\uB110\\uB85C \\uC774\\uB3D9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)]\n        }, vtuber.channelId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-grid\",\n        children: visibleSongs.length > 0 ? visibleSongs.map(song => /*#__PURE__*/_jsxDEV(VideoCard, {\n          song: song\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uAC80\\uC0C9\\uB41C \\uB178\\uB798\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), hasMoreSongs && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadMoreSongs,\n        children: \"\\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchResultsPage, \"RCtzvjA90oapisguCXLR1JlBY20=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SearchResultsPage;\nexport default SearchResultsPage;\nvar _c;\n$RefreshReg$(_c, \"SearchResultsPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useNavigate","VideoCard","jsxDEV","_jsxDEV","SearchResultsPage","_s","searchResults","setSearchResults","visibleSongs","setVisibleSongs","songPage","setSongPage","hasMoreSongs","setHasMoreSongs","location","navigate","query","URLSearchParams","search","get","channelId","params","then","response","console","log","data","songs","slice","catch","error","loadMoreSongs","nextPage","newSongs","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","vtubers","map","vtuber","src","channelImg","alt","name","subscribers","onClick","window","open","song","id","_c","$RefreshReg$"],"sources":["C:/Users/lold2/demo/src/front/src/page/SearchResultsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './SearchResultsPage.css'; // SearchResultsPage 전용 CSS 파일\r\nimport { useLocation, useNavigate } from 'react-router-dom'; // useNavigate 사용\r\nimport VideoCard from './components/VideoCard'; // VideoCard 컴포넌트 가져오기\r\n\r\nconst SearchResultsPage: React.FC = () => {\r\n    const [searchResults, setSearchResults] = useState<{ songs: any[], vtubers: any[] } | null>(null);\r\n    const [visibleSongs, setVisibleSongs] = useState<any[]>([]);\r\n    const [songPage, setSongPage] = useState(1);\r\n    const [hasMoreSongs, setHasMoreSongs] = useState(true);\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const query = new URLSearchParams(location.search).get('query');\r\n    const channelId = new URLSearchParams(location.search).get('channelId'); // channelId 가져옴\r\n\r\n    useEffect(() => {\r\n        // channelId 또는 query가 있을 때 API 호출\r\n        if (query || channelId) {\r\n            axios.get('http://localhost:8080/api/v1/vtubers/search', {\r\n                params: { query, channelId } // query 또는 channelId 전달\r\n            })\r\n                .then((response) => {\r\n                    console.log('Search results:', response.data); // 결과 로그 확인\r\n                    if (response.data) {\r\n                        setSearchResults(response.data);\r\n                        setVisibleSongs(response.data.songs.slice(0, 10)); // 처음 10개 노출\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error('검색 중 오류 발생:', error);\r\n                });\r\n        }\r\n    }, [query, channelId]); // query와 channelId가 변경될 때마다 호출\r\n\r\n    const loadMoreSongs = () => {\r\n        if (!searchResults) return; // searchResults가 null인 경우 처리\r\n\r\n        const nextPage = songPage + 1;\r\n        const newSongs = searchResults.songs.slice(visibleSongs.length, visibleSongs.length + 10);\r\n        setVisibleSongs([...visibleSongs, ...newSongs]); // 10개씩 추가로 보이기\r\n        setSongPage(nextPage);\r\n\r\n        if (newSongs.length < 10) {\r\n            setHasMoreSongs(false); // 더 이상 노래가 없으면 더보기 버튼 숨김\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-results-page\">\r\n            <h1>검색 결과</h1>\r\n\r\n            {/* 버튜버 채널 결과 */}\r\n            {searchResults?.vtubers && searchResults.vtubers.length > 0 && (\r\n                <div>\r\n                    <h2>버튜버 채널</h2>\r\n                    <div className=\"vtuber-grid\">\r\n                        {searchResults.vtubers.map((vtuber: any) => (\r\n                            <div className=\"vtuber-card\" key={vtuber.channelId}>\r\n                                <img src={vtuber.channelImg} alt={vtuber.name} />\r\n                                <div className=\"vtuber-info\">\r\n                                    <h3>{vtuber.name}</h3>\r\n                                    <p>구독자 수: {vtuber.subscribers}</p>\r\n                                    <button onClick={() => window.open(`https://www.youtube.com/channel/${vtuber.channelId}`, '_blank')}>\r\n                                        채널로 이동\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* 노래 결과 */}\r\n            <div>\r\n                <div className=\"video-grid\">\r\n                    {visibleSongs.length > 0 ? (\r\n                        visibleSongs.map((song: any) => (\r\n                            <VideoCard key={song.id} song={song} />\r\n                        ))\r\n                    ) : (\r\n                        <p>검색된 노래가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n\r\n                {/* 더보기 버튼 */}\r\n                {hasMoreSongs && (\r\n                    <button onClick={loadMoreSongs}>더보기</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchResultsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}