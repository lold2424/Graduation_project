{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lold2\\\\demo\\\\src\\\\front\\\\src\\\\page\\\\SearchResultsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom'; // URL에서 쿼리 파라미터를 얻기 위해 사용\nimport axios from 'axios';\nimport './SearchResultsPage.css'; // 검색 결과 페이지 CSS\nimport VideoCard from './components/VideoCard'; // 검색 결과를 표시할 비디오 카드 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResultsPage = () => {\n  _s();\n  const location = useLocation(); // 현재 URL에서 쿼리 파라미터를 가져오기 위해 사용\n  const [searchResults, setSearchResults] = useState([]); // 검색 결과를 저장할 상태\n\n  // URL에서 검색 쿼리 추출\n  const query = new URLSearchParams(location.search).get('query');\n  useEffect(() => {\n    if (query) {\n      // 검색 결과를 API로부터 가져오기\n      axios.get(`/api/search?query=${encodeURIComponent(query)}`).then(response => {\n        setSearchResults(response.data);\n      }).catch(error => {\n        console.error('검색 결과를 불러오는 중 오류 발생:', error);\n      });\n    }\n  }, [query]); // 검색 쿼리가 변경될 때마다 호출\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uAC80\\uC0C9 \\uACB0\\uACFC: \", query]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: searchResults.map(result => /*#__PURE__*/_jsxDEV(VideoCard, {\n        song: result\n      }, result.videoId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchResultsPage, \"nl7TYISKFFrPXs3Nm71gEuoYj9E=\", false, function () {\n  return [useLocation];\n});\n_c = SearchResultsPage;\nexport default SearchResultsPage;\nvar _c;\n$RefreshReg$(_c, \"SearchResultsPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","VideoCard","jsxDEV","_jsxDEV","SearchResultsPage","_s","location","searchResults","setSearchResults","query","URLSearchParams","search","get","encodeURIComponent","then","response","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","result","song","videoId","_c","$RefreshReg$"],"sources":["C:/Users/lold2/demo/src/front/src/page/SearchResultsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'; // URL에서 쿼리 파라미터를 얻기 위해 사용\r\nimport axios from 'axios';\r\nimport './SearchResultsPage.css'; // 검색 결과 페이지 CSS\r\nimport VideoCard from './components/VideoCard'; // 검색 결과를 표시할 비디오 카드 컴포넌트\r\n\r\nconst SearchResultsPage: React.FC = () => {\r\n    const location = useLocation(); // 현재 URL에서 쿼리 파라미터를 가져오기 위해 사용\r\n    const [searchResults, setSearchResults] = useState<any[]>([]); // 검색 결과를 저장할 상태\r\n\r\n    // URL에서 검색 쿼리 추출\r\n    const query = new URLSearchParams(location.search).get('query');\r\n\r\n    useEffect(() => {\r\n        if (query) {\r\n            // 검색 결과를 API로부터 가져오기\r\n            axios.get(`/api/search?query=${encodeURIComponent(query)}`)\r\n                .then(response => {\r\n                    setSearchResults(response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error('검색 결과를 불러오는 중 오류 발생:', error);\r\n                });\r\n        }\r\n    }, [query]); // 검색 쿼리가 변경될 때마다 호출\r\n\r\n    return (\r\n        <div className=\"search-results-page\">\r\n            <h2>검색 결과: {query}</h2>\r\n\r\n            {searchResults.length > 0 ? (\r\n                <div className=\"video-grid\">\r\n                    {searchResults.map((result: any) => (\r\n                        <VideoCard key={result.videoId} song={result} />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p>검색 결과가 없습니다.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchResultsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB,CAAC,CAAC;AAClC,OAAOC,SAAS,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAQ,EAAE,CAAC,CAAC,CAAC;;EAE/D;EACA,MAAMW,KAAK,GAAG,IAAIC,eAAe,CAACJ,QAAQ,CAACK,MAAM,CAAC,CAACC,GAAG,CAAC,OAAO,CAAC;EAE/Df,SAAS,CAAC,MAAM;IACZ,IAAIY,KAAK,EAAE;MACP;MACAT,KAAK,CAACY,GAAG,CAAC,qBAAqBC,kBAAkB,CAACJ,KAAK,CAAC,EAAE,CAAC,CACtDK,IAAI,CAACC,QAAQ,IAAI;QACdP,gBAAgB,CAACO,QAAQ,CAACC,IAAI,CAAC;MACnC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,oBACIN,OAAA;IAAKiB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChClB,OAAA;MAAAkB,QAAA,GAAI,6BAAO,EAACZ,KAAK;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAEtBlB,aAAa,CAACmB,MAAM,GAAG,CAAC,gBACrBvB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBd,aAAa,CAACoB,GAAG,CAAEC,MAAW,iBAC3BzB,OAAA,CAACF,SAAS;QAAsB4B,IAAI,EAAED;MAAO,GAA7BA,MAAM,CAACE,OAAO;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,gBAENtB,OAAA;MAAAkB,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACpB,EAAA,CAnCID,iBAA2B;EAAA,QACZL,WAAW;AAAA;AAAAgC,EAAA,GAD1B3B,iBAA2B;AAqCjC,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}