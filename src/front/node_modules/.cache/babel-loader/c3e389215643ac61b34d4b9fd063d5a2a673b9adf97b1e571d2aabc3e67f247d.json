{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lold2\\\\demo\\\\src\\\\front\\\\src\\\\page\\\\MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './MainPage.css'; // MainPage 전용 CSS 파일\nimport VideoCard from './components/VideoCard'; // 비디오 카드 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    axios.get('/main') // 백엔드에서 데이터 가져오기\n    .then(response => {\n      console.log(response.data);\n      setData(response.data);\n    }).catch(error => {\n      console.error('백엔드에서 데이터 가져오기 오류:', error);\n    });\n  }, []);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCD5C\\uC2E0 \\uB178\\uB798\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-grid\",\n        children: data.latestSongs.map(song => /*#__PURE__*/_jsxDEV(VideoCard, {\n          song: song\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC778\\uAE30 \\uC788\\uC5B4\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popular-grid\",\n        children: data.dailyPopularSongs.map(song => /*#__PURE__*/_jsxDEV(VideoCard, {\n          song: song\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC8FC\\uAC04 \\uC778\\uAE30\\uCC28\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chart-list\",\n        children: data.weeklyTopSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [index + 1, \". \", song.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: song.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, song.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","VideoCard","jsxDEV","_jsxDEV","MainPage","_s","data","setData","get","then","response","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","latestSongs","map","song","id","dailyPopularSongs","weeklyTopSongs","index","title","artist","_c","$RefreshReg$"],"sources":["C:/Users/lold2/demo/src/front/src/page/MainPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './MainPage.css'; // MainPage 전용 CSS 파일\r\nimport VideoCard from './components/VideoCard'; // 비디오 카드 컴포넌트\r\n\r\nconst MainPage: React.FC = () => {\r\n    const [data, setData] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        axios.get('/main') // 백엔드에서 데이터 가져오기\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setData(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('백엔드에서 데이터 가져오기 오류:', error);\r\n            });\r\n    }, []);\r\n\r\n    if (!data) {\r\n        return <p>로딩 중...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-page\">\r\n            {/* 최신 노래 섹션 */}\r\n            <section>\r\n                <h2>최신 노래</h2>\r\n                <div className=\"video-grid\">\r\n                    {data.latestSongs.map((song: any) => (\r\n                        <VideoCard key={song.id} song={song} />\r\n                    ))}\r\n                </div>\r\n            </section>\r\n\r\n            {/* 인기 있어요 섹션 */}\r\n            <section>\r\n                <h2>인기 있어요</h2>\r\n                <div className=\"popular-grid\">\r\n                    {data.dailyPopularSongs.map((song: any) => (\r\n                        <VideoCard key={song.id} song={song} />\r\n                    ))}\r\n                </div>\r\n            </section>\r\n\r\n            {/* 주간 인기차트 섹션 */}\r\n            <section className=\"chart-section\">\r\n                <h2>주간 인기차트</h2>\r\n                <ul className=\"chart-list\">\r\n                    {data.weeklyTopSongs.map((song: any, index: number) => (\r\n                        <li key={song.id} className=\"chart-item\">\r\n                            <h4>{index + 1}. {song.title}</h4>\r\n                            <span>{song.artist}</span>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}