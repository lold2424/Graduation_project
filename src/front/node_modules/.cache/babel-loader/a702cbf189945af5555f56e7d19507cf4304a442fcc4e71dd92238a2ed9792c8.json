{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import'./SearchResultsPage.css';// SearchResultsPage 전용 CSS 파일\nimport{useLocation,useNavigate}from'react-router-dom';// useNavigate 사용\nimport VideoCard from'./components/VideoCard';// VideoCard 컴포넌트 가져오기\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SearchResultsPage=()=>{const[searchResults,setSearchResults]=useState(null);const[visibleSongs,setVisibleSongs]=useState([]);const[songPage,setSongPage]=useState(1);const[hasMoreSongs,setHasMoreSongs]=useState(true);const location=useLocation();const navigate=useNavigate();const query=new URLSearchParams(location.search).get('query');const channelId=new URLSearchParams(location.search).get('channelId');// channelId 가져옴\nuseEffect(()=>{// channelId 또는 query가 있을 때 API 호출\nif(query||channelId){axios.get('http://localhost:8080/api/v1/vtubers/search',{params:{query,channelId}// query 또는 channelId 전달\n}).then(response=>{console.log('Search results:',response.data);// 결과 로그 확인\nif(response.data){setSearchResults(response.data);setVisibleSongs(response.data.songs.slice(0,10));// 처음 10개 노출\n}}).catch(error=>{console.error('검색 중 오류 발생:',error);});}},[query,channelId]);// query와 channelId가 변경될 때마다 호출\nconst loadMoreSongs=()=>{if(!searchResults)return;// searchResults가 null인 경우 처리\nconst nextPage=songPage+1;const newSongs=searchResults.songs.slice(visibleSongs.length,visibleSongs.length+10);setVisibleSongs([...visibleSongs,...newSongs]);// 10개씩 추가로 보이기\nsetSongPage(nextPage);if(newSongs.length<10){setHasMoreSongs(false);// 더 이상 노래가 없으면 더보기 버튼 숨김\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"search-results-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uAC80\\uC0C9 \\uACB0\\uACFC\"}),(searchResults===null||searchResults===void 0?void 0:searchResults.vtubers)&&searchResults.vtubers.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uBC84\\uD29C\\uBC84 \\uCC44\\uB110\"}),/*#__PURE__*/_jsx(\"div\",{className:\"vtuber-grid\",children:searchResults.vtubers.map(vtuber=>/*#__PURE__*/_jsxs(\"div\",{className:\"vtuber-card\",children:[/*#__PURE__*/_jsx(\"img\",{src:vtuber.channelImg,alt:vtuber.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"vtuber-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:vtuber.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uAD6C\\uB3C5\\uC790 \\uC218: \",vtuber.subscribers]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.open(`https://www.youtube.com/channel/${vtuber.channelId}`,'_blank'),children:\"\\uCC44\\uB110\\uB85C \\uC774\\uB3D9\"})]})]},vtuber.channelId))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"video-grid\",children:visibleSongs.length>0?visibleSongs.map(song=>/*#__PURE__*/_jsx(VideoCard,{song:song},song.id)):/*#__PURE__*/_jsx(\"p\",{children:\"\\uAC80\\uC0C9\\uB41C \\uB178\\uB798\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})}),hasMoreSongs&&/*#__PURE__*/_jsx(\"button\",{onClick:loadMoreSongs,children:\"\\uB354\\uBCF4\\uAE30\"})]})]});};export default SearchResultsPage;","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useNavigate","VideoCard","jsx","_jsx","jsxs","_jsxs","SearchResultsPage","searchResults","setSearchResults","visibleSongs","setVisibleSongs","songPage","setSongPage","hasMoreSongs","setHasMoreSongs","location","navigate","query","URLSearchParams","search","get","channelId","params","then","response","console","log","data","songs","slice","catch","error","loadMoreSongs","nextPage","newSongs","length","className","children","vtubers","map","vtuber","src","channelImg","alt","name","subscribers","onClick","window","open","song","id"],"sources":["C:/Users/lold2/demo/src/front/src/page/SearchResultsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './SearchResultsPage.css'; // SearchResultsPage 전용 CSS 파일\r\nimport { useLocation, useNavigate } from 'react-router-dom'; // useNavigate 사용\r\nimport VideoCard from './components/VideoCard'; // VideoCard 컴포넌트 가져오기\r\n\r\nconst SearchResultsPage: React.FC = () => {\r\n    const [searchResults, setSearchResults] = useState<{ songs: any[], vtubers: any[] } | null>(null);\r\n    const [visibleSongs, setVisibleSongs] = useState<any[]>([]);\r\n    const [songPage, setSongPage] = useState(1);\r\n    const [hasMoreSongs, setHasMoreSongs] = useState(true);\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const query = new URLSearchParams(location.search).get('query');\r\n    const channelId = new URLSearchParams(location.search).get('channelId'); // channelId 가져옴\r\n\r\n    useEffect(() => {\r\n        // channelId 또는 query가 있을 때 API 호출\r\n        if (query || channelId) {\r\n            axios.get('http://localhost:8080/api/v1/vtubers/search', {\r\n                params: { query, channelId } // query 또는 channelId 전달\r\n            })\r\n                .then((response) => {\r\n                    console.log('Search results:', response.data); // 결과 로그 확인\r\n                    if (response.data) {\r\n                        setSearchResults(response.data);\r\n                        setVisibleSongs(response.data.songs.slice(0, 10)); // 처음 10개 노출\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error('검색 중 오류 발생:', error);\r\n                });\r\n        }\r\n    }, [query, channelId]); // query와 channelId가 변경될 때마다 호출\r\n\r\n    const loadMoreSongs = () => {\r\n        if (!searchResults) return; // searchResults가 null인 경우 처리\r\n\r\n        const nextPage = songPage + 1;\r\n        const newSongs = searchResults.songs.slice(visibleSongs.length, visibleSongs.length + 10);\r\n        setVisibleSongs([...visibleSongs, ...newSongs]); // 10개씩 추가로 보이기\r\n        setSongPage(nextPage);\r\n\r\n        if (newSongs.length < 10) {\r\n            setHasMoreSongs(false); // 더 이상 노래가 없으면 더보기 버튼 숨김\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-results-page\">\r\n            <h1>검색 결과</h1>\r\n\r\n            {/* 버튜버 채널 결과 */}\r\n            {searchResults?.vtubers && searchResults.vtubers.length > 0 && (\r\n                <div>\r\n                    <h2>버튜버 채널</h2>\r\n                    <div className=\"vtuber-grid\">\r\n                        {searchResults.vtubers.map((vtuber: any) => (\r\n                            <div className=\"vtuber-card\" key={vtuber.channelId}>\r\n                                <img src={vtuber.channelImg} alt={vtuber.name} />\r\n                                <div className=\"vtuber-info\">\r\n                                    <h3>{vtuber.name}</h3>\r\n                                    <p>구독자 수: {vtuber.subscribers}</p>\r\n                                    <button onClick={() => window.open(`https://www.youtube.com/channel/${vtuber.channelId}`, '_blank')}>\r\n                                        채널로 이동\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* 노래 결과 */}\r\n            <div>\r\n                <div className=\"video-grid\">\r\n                    {visibleSongs.length > 0 ? (\r\n                        visibleSongs.map((song: any) => (\r\n                            <VideoCard key={song.id} song={song} />\r\n                        ))\r\n                    ) : (\r\n                        <p>검색된 노래가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n\r\n                {/* 더보기 버튼 */}\r\n                {hasMoreSongs && (\r\n                    <button onClick={loadMoreSongs}>더보기</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchResultsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}