{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lold2\\\\demo\\\\src\\\\front\\\\src\\\\page\\\\components\\\\Header.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // 페이지 이동을 위한 useNavigate 훅 사용\nimport './Header.css'; // 스타일 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  onSearch\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n  const handleSearch = () => {\n    if (!searchTerm.trim()) return;\n    if (onSearch) {\n      onSearch(searchTerm); // onSearch가 있는 경우 실행\n    } else {\n      navigate(`/search?query=${searchTerm}`); // 기본 동작으로 페이지 이동\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const handleClear = () => {\n    setSearchTerm(''); // 검색어 초기화\n  };\n  const handleGoHome = () => {\n    navigate('/'); // 홈으로 이동\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"home-btn\",\n      onClick: handleGoHome,\n      children: \"\\uD648\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        onKeyPress: handleKeyPress // Enter 키 입력 시 검색\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"clear-btn\",\n        onClick: handleClear,\n        children: \"\\u2715 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        onClick: handleSearch,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/SearchBar.png\",\n          alt: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"wjbP4zVEBL8ya0shEuwo30QWfMs=\", false, function () {\n  return [useNavigate];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Header","onSearch","_s","searchTerm","setSearchTerm","navigate","handleSearch","trim","handleKeyPress","event","key","handleClear","handleGoHome","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyPress","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/lold2/demo/src/front/src/page/components/Header.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // 페이지 이동을 위한 useNavigate 훅 사용\r\nimport './Header.css';  // 스타일 정의\r\n\r\ninterface HeaderProps {\r\n    onSearch?: (searchTerm: string) => void; // 선택적으로 받도록 설정\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ onSearch }) => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSearch = () => {\r\n        if (!searchTerm.trim()) return;\r\n        if (onSearch) {\r\n            onSearch(searchTerm);  // onSearch가 있는 경우 실행\r\n        } else {\r\n            navigate(`/search?query=${searchTerm}`); // 기본 동작으로 페이지 이동\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            handleSearch();\r\n        }\r\n    };\r\n\r\n    const handleClear = () => {\r\n        setSearchTerm('');  // 검색어 초기화\r\n    };\r\n\r\n    const handleGoHome = () => {\r\n        navigate('/');  // 홈으로 이동\r\n    };\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <button className=\"home-btn\" onClick={handleGoHome}>\r\n                홈\r\n            </button>\r\n\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"검색\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    onKeyPress={handleKeyPress}  // Enter 키 입력 시 검색\r\n                />\r\n                {searchTerm && (\r\n                    <button type=\"button\" className=\"clear-btn\" onClick={handleClear}>\r\n                        &#x2715; {/* X 아이콘 */}\r\n                    </button>\r\n                )}\r\n                <button type=\"submit\" className=\"search-btn\" onClick={handleSearch}>\r\n                    <img src=\"/images/SearchBar.png\" alt=\"Search\" />\r\n                </button>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAE;AACjD,OAAO,cAAc,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMxB,MAAMC,MAA6B,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACH,UAAU,CAACI,IAAI,CAAC,CAAC,EAAE;IACxB,IAAIN,QAAQ,EAAE;MACVA,QAAQ,CAACE,UAAU,CAAC,CAAC,CAAE;IAC3B,CAAC,MAAM;MACHE,QAAQ,CAAC,iBAAiBF,UAAU,EAAE,CAAC,CAAC,CAAC;IAC7C;EACJ,CAAC;EAED,MAAMK,cAAc,GAAIC,KAA4C,IAAK;IACrE,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACvBJ,YAAY,CAAC,CAAC;IAClB;EACJ,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACtBP,aAAa,CAAC,EAAE,CAAC,CAAC,CAAE;EACxB,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACvBP,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAE;EACpB,CAAC;EAED,oBACIN,OAAA;IAAQc,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACtBf,OAAA;MAAQc,SAAS,EAAC,UAAU;MAACE,OAAO,EAAEH,YAAa;MAAAE,QAAA,EAAC;IAEpD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETpB,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBf,OAAA;QACIqB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,cAAI;QAChBC,KAAK,EAAEnB,UAAW;QAClBoB,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,UAAU,EAAElB,cAAe,CAAE;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,EACDhB,UAAU,iBACPJ,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,WAAW;QAACE,OAAO,EAAEJ,WAAY;QAAAG,QAAA,EAAC;MACrD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACX,eACDpB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,YAAY;QAACE,OAAO,EAAET,YAAa;QAAAQ,QAAA,eAC/Df,OAAA;UAAK4B,GAAG,EAAC,uBAAuB;UAACC,GAAG,EAAC;QAAQ;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAACjB,EAAA,CApDIF,MAA6B;EAAA,QAEdH,WAAW;AAAA;AAAAgC,EAAA,GAF1B7B,MAA6B;AAsDnC,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}