{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';// 페이지 이동을 위한 useNavigate 훅 사용\nimport'./Header.css';// 스타일 정의\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Header=_ref=>{let{onSearch}=_ref;const[searchTerm,setSearchTerm]=useState('');const navigate=useNavigate();const handleSearch=()=>{if(!searchTerm.trim())return;if(onSearch){onSearch(searchTerm);// onSearch가 있는 경우 실행\n}else{navigate(`/search?query=${searchTerm}`);// 기본 동작으로 페이지 이동\n}};const handleKeyPress=event=>{if(event.key==='Enter'){handleSearch();}};const handleClear=()=>{setSearchTerm('');// 검색어 초기화\n};const handleGoHome=()=>{navigate('/');// 홈으로 이동\n};return/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"home-btn\",onClick:handleGoHome,children:\"\\uD648\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-bar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uAC80\\uC0C9\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),onKeyPress:handleKeyPress// Enter 키 입력 시 검색\n}),searchTerm&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"clear-btn\",onClick:handleClear,children:\"\\u2715 \"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"search-btn\",onClick:handleSearch,children:/*#__PURE__*/_jsx(\"img\",{src:\"/images/SearchBar.png\",alt:\"Search\"})})]})]});};export default Header;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Header","_ref","onSearch","searchTerm","setSearchTerm","navigate","handleSearch","trim","handleKeyPress","event","key","handleClear","handleGoHome","className","children","onClick","type","placeholder","value","onChange","e","target","onKeyPress","src","alt"],"sources":["C:/Users/lold2/demo/src/front/src/page/components/Header.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // 페이지 이동을 위한 useNavigate 훅 사용\r\nimport './Header.css';  // 스타일 정의\r\n\r\ninterface HeaderProps {\r\n    onSearch?: (searchTerm: string) => void; // 선택적으로 받도록 설정\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ onSearch }) => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSearch = () => {\r\n        if (!searchTerm.trim()) return;\r\n        if (onSearch) {\r\n            onSearch(searchTerm);  // onSearch가 있는 경우 실행\r\n        } else {\r\n            navigate(`/search?query=${searchTerm}`); // 기본 동작으로 페이지 이동\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            handleSearch();\r\n        }\r\n    };\r\n\r\n    const handleClear = () => {\r\n        setSearchTerm('');  // 검색어 초기화\r\n    };\r\n\r\n    const handleGoHome = () => {\r\n        navigate('/');  // 홈으로 이동\r\n    };\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <button className=\"home-btn\" onClick={handleGoHome}>\r\n                홈\r\n            </button>\r\n\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"검색\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    onKeyPress={handleKeyPress}  // Enter 키 입력 시 검색\r\n                />\r\n                {searchTerm && (\r\n                    <button type=\"button\" className=\"clear-btn\" onClick={handleClear}>\r\n                        &#x2715; {/* X 아이콘 */}\r\n                    </button>\r\n                )}\r\n                <button type=\"submit\" className=\"search-btn\" onClick={handleSearch}>\r\n                    <img src=\"/images/SearchBar.png\" alt=\"Search\" />\r\n                </button>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAAG;AACjD,MAAO,cAAc,CAAG;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMxB,KAAM,CAAAC,MAA6B,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/C,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAAW,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAW,YAAY,CAAGA,CAAA,GAAM,CACvB,GAAI,CAACH,UAAU,CAACI,IAAI,CAAC,CAAC,CAAE,OACxB,GAAIL,QAAQ,CAAE,CACVA,QAAQ,CAACC,UAAU,CAAC,CAAG;AAC3B,CAAC,IAAM,CACHE,QAAQ,CAAC,iBAAiBF,UAAU,EAAE,CAAC,CAAE;AAC7C,CACJ,CAAC,CAED,KAAM,CAAAK,cAAc,CAAIC,KAA4C,EAAK,CACrE,GAAIA,KAAK,CAACC,GAAG,GAAK,OAAO,CAAE,CACvBJ,YAAY,CAAC,CAAC,CAClB,CACJ,CAAC,CAED,KAAM,CAAAK,WAAW,CAAGA,CAAA,GAAM,CACtBP,aAAa,CAAC,EAAE,CAAC,CAAG;AACxB,CAAC,CAED,KAAM,CAAAQ,YAAY,CAAGA,CAAA,GAAM,CACvBP,QAAQ,CAAC,GAAG,CAAC,CAAG;AACpB,CAAC,CAED,mBACIN,KAAA,WAAQc,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACtBjB,IAAA,WAAQgB,SAAS,CAAC,UAAU,CAACE,OAAO,CAAEH,YAAa,CAAAE,QAAA,CAAC,QAEpD,CAAQ,CAAC,cAETf,KAAA,QAAKc,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvBjB,IAAA,UACImB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,cAAI,CAChBC,KAAK,CAAEf,UAAW,CAClBgB,QAAQ,CAAGC,CAAC,EAAKhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC/CI,UAAU,CAAEd,cAAiB;AAAA,CAChC,CAAC,CACDL,UAAU,eACPN,IAAA,WAAQmB,IAAI,CAAC,QAAQ,CAACH,SAAS,CAAC,WAAW,CAACE,OAAO,CAAEJ,WAAY,CAAAG,QAAA,CAAC,SACrD,CACL,CACX,cACDjB,IAAA,WAAQmB,IAAI,CAAC,QAAQ,CAACH,SAAS,CAAC,YAAY,CAACE,OAAO,CAAET,YAAa,CAAAQ,QAAA,cAC/DjB,IAAA,QAAK0B,GAAG,CAAC,uBAAuB,CAACC,GAAG,CAAC,QAAQ,CAAE,CAAC,CAC5C,CAAC,EACR,CAAC,EACF,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAxB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}