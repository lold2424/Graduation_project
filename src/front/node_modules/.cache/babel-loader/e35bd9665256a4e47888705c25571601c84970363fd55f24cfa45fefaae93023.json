{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lold2\\\\demo\\\\src\\\\front\\\\src\\\\page\\\\MainPage.tsx\",\n  _s = $RefreshSig$();\n// src/MainPage.tsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [data, setData] = useState(null); // Replace 'any' with your actual data type\n\n  useEffect(() => {\n    // 백엔드의 /main 엔드포인트에서 데이터 가져오기\n    axios.get('/main').then(response => {\n      setData(response.data); // 데이터 설정\n    }).catch(error => {\n      console.error('Error fetching data from backend:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vtuber Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), data.randomSongs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MainPage","_s","data","setData","get","then","response","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","randomSongs","map","song","title","description","id","_c","$RefreshReg$"],"sources":["C:/Users/lold2/demo/src/front/src/page/MainPage.tsx"],"sourcesContent":["// src/MainPage.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MainPage: React.FC = () => {\r\n    const [data, setData] = useState<any>(null); // Replace 'any' with your actual data type\r\n\r\n    useEffect(() => {\r\n        // 백엔드의 /main 엔드포인트에서 데이터 가져오기\r\n        axios.get('/main')\r\n            .then((response) => {\r\n                setData(response.data); // 데이터 설정\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching data from backend:', error);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {data ? (\r\n                <div>\r\n                    {/* 데이터를 기반으로 UI 구성 */}\r\n                    <h1>Vtuber Songs</h1>\r\n                    {data.randomSongs.map((song: any) => (\r\n                        <div key={song.id}>\r\n                            <h2>{song.title}</h2>\r\n                            <p>{song.description}</p>\r\n                            {/* 노래 데이터를 더 표시하거나 미리보기 등 추가 UI */}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAM,IAAI,CAAC,CAAC,CAAC;;EAE7CD,SAAS,CAAC,MAAM;IACZ;IACAE,KAAK,CAACO,GAAG,CAAC,OAAO,CAAC,CACbC,IAAI,CAAEC,QAAQ,IAAK;MAChBH,OAAO,CAACG,QAAQ,CAACJ,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC7D,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA;IAAAW,QAAA,EACKR,IAAI,gBACDH,OAAA;MAAAW,QAAA,gBAEIX,OAAA;QAAAW,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpBZ,IAAI,CAACa,WAAW,CAACC,GAAG,CAAEC,IAAS,iBAC5BlB,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAAW,QAAA,EAAKO,IAAI,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBf,OAAA;UAAAW,QAAA,EAAIO,IAAI,CAACE;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFnBG,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,gBAENf,OAAA;MAAAW,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACnB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACb,EAAA,CAjCID,QAAkB;AAAAqB,EAAA,GAAlBrB,QAAkB;AAmCxB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}